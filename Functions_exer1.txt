def getDivisorsOfaNumber(n):
    ls=[]
    [ls.append(element) for element in range(n+1) if element%2==0]
    return ls

# Example input() statement
def getLCMOfTwoNumbers(n1,n2):
    gcdlst1 = []
    gcdlst2 = []
    cmnlst=[]

    i=1
    while(i<=n1):
        if(n1%i==0):
            gcdlst1.append(i)
        i = i + 1

    i=1
    while(i<=n2):
        if(n2%i==0):
            gcdlst2.append(i)
        i = i + 1

    for item in gcdlst1:
        if item in gcdlst2:
            cmnlst.append(item)

    gcd = max(cmnlst)

    result = abs(n1*n2)//gcd

    return result


def sumOfNumbersInList(ls):
    total = 0
    for i in ls:
        total = total + i
    return total

def productOfNumbersInList(ls):
    prod = 1
    for i in ls:
        prod = prod * i
    return prod


def evensInList(ls):
    evens = []
    for element in ls:
        if element%2==0:
            evens.append(element)
    return(evens)


def factorial(number):
    result=1
    if number <= 0:
        return
    else:
        while(number>0):
            result = result*(number)
            number = number - 1
        return (result)

 # Example input() statement
def checkPrimeorNot(number):
    i=1
    lst=[]
    while(i<=number):
        if(number%i==0):
            lst.append(i)
        i = i+1

    if len(lst)==2:
        print('The number you inputted is a prime number.')
    else:
        print('The number you inputted is not a prime number.')

def countNoOfWordsInString(string):
    return len(string.split(' '))

def countNoOfWordsInStringWithDelimiter(string,delimiter):
    return len(string.split(delimiter))

def wordsLenInPhrase(string,delimiter):
    ls=[]
    for element in string.split(delimiter):
        ls.append(len(element))
    return ls
            
        
def getPrimes(number):
    flist=[]
    for j in range(number+1):
        i=1
        lst=[]
        while(i<=j):
            if(j%i==0):
                lst.append(i)
            i = i+1
        if len(lst)==2:
            flist.append(j)
    return flist
        
def divisorYesOrNo(ls,num):
    flist=[]
    for element in ls:
        if element%num==0:
            flist.append('yes')
        else:
            flist.append('no')
    return flist            
	
def listOfWordsEndswith(string,char):
    flist=[]
    for word in string:
        if word.lower().endswith(char.lower()):
            flist.append(word)
    return flist

def listOfWordswithSubString(string,chars):
    flist=[]
    for indx,word in enumerate(string):
        if chars in word:
            flist.append(indx)
    return flist	


def countNoOfWordsInString(string):
    return len(string.split(' '))
       
def countNoOfWordsInStringWithDelimiter(string,delimiter):
    return len(string.split(delimiter))
    
def wordsLenInPhrase(string,delimiter):
    ls=[]
    for element in string.split(delimiter):
        ls.append(len(element))
    return ls
    	

------------------------------------------------------------------------------------------------
def getDivisorsOfaNumber(n):
    ls=[]
    [ls.append(element) for element in range(n+1) if element%2==0]
    return ls
	
	
# Example input() statement
def getLCMOfTwoNumbers(n1,n2):
    gcdlst1 = []
    gcdlst2 = []
    cmnlst=[]

    i=1
    while(i<=n1):
        if(n1%i==0):
            gcdlst1.append(i)
        i = i + 1

    i=1
    while(i<=n2):
        if(n2%i==0):
            gcdlst2.append(i)
        i = i + 1

    for item in gcdlst1:
        if item in gcdlst2:
            cmnlst.append(item)

    gcd = max(cmnlst)

    result = abs(n1*n2)//gcd

    return result
	
def sumOfNumbersInList(ls):
    total = 0
    for i in ls:
        total = total + i
    return total

	def productOfNumbersInList(ls):
    prod = 1
    for i in ls:
        prod = prod * i
    return prod
	
def evensInList(ls):
    evens = []
    for element in ls:
        if element%2==0:
            evens.append(element)
    return(evens)
	

	
	
flist=[]
def build_dices():
    f4dice = [i for i in range(1,5)]
    f6dice = [i for i in range(1,7)]
    f8dice = [i for i in range(1,9)]
    f10dice = [i for i in range(1,11)]
    f12dice = [i for i in range(1,13)]
    f20dice = [i for i in range(1,21)]
    ls = [f4dice,f6dice,f8dice,f10dice,f12dice,f20dice]
    return ls
ls=build_dices()
def draw_dices(ls,noofdicestodraw):
    for i in range(noofdicestodraw):
        ls.remove(random.choice(ls))
    return ls
def sel_2_dices(ls):
    for i in range(1,3):
        selchoice=[]
        selchoice = random.choice(ls)
        flist.append(selchoice)
        ls.remove(selchoice)
    return flist
def sum_rolled2dices(flist):
    total=0
    for i in range(0,2):
        x=random.choice(flist[i])
        total = total + x
        print(x)
    return(total)
        
        
    
if __name__ == '__main__':
    build_dices()
    drawn=draw_dices(ls,3)
    final_2 = sel_2_dices(drawn)
    print(final_2)
    sum_rolled2dices(final_2)

        
    




